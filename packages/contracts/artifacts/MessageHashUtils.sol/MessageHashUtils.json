{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203bc693ebcd5937d0a9b8f95bdb676f0632b2c8c25a9f96ca69da844eacdc10ef64736f6c634300081a0033","sourceMap":"521:3235:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3235:13;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203bc693ebcd5937d0a9b8f95bdb676f0632b2c8c25a9f96ca69da844eacdc10ef64736f6c634300081a0033","sourceMap":"521:3235:13:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../../node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=../../node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=../../node_modules/@openzeppelin/contracts-upgradeable/\",\":@zk-email/=../../node_modules/@zk-email/\",\":ds-test/=../../node_modules/ds-test/src/\",\":forge-std/=../../node_modules/forge-std/src/\",\":solady/=../../node_modules/solady/\",\":solidity-stringutils/=../../node_modules/solidity-stringutils/\"]},\"sources\":{\"../../node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"../../node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"../../node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"../../node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=../../node_modules/@openzeppelin/","@openzeppelin/contracts-upgradeable/=../../node_modules/@openzeppelin/contracts-upgradeable/","@zk-email/=../../node_modules/@zk-email/","ds-test/=../../node_modules/ds-test/src/","forge-std/=../../node_modules/forge-std/src/","solady/=../../node_modules/solady/","solidity-stringutils/=../../node_modules/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"../../node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"evmVersion":"paris","libraries":{}},"sources":{"../../node_modules/@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792","urls":["bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453","dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"],"license":"MIT"},"../../node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435","urls":["bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c","dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"],"license":"MIT"},"../../node_modules/@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d","urls":["bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875","dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"],"license":"MIT"},"../../node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72","urls":["bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc","dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"../../node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":1186,"exportedSymbols":{"MessageHashUtils":[1185],"Strings":[763]},"nodeType":"SourceUnit","src":"123:3634:13","nodes":[{"id":1113,"nodeType":"PragmaDirective","src":"123:24:13","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":1115,"nodeType":"ImportDirective","src":"149:39:13","nodes":[],"absolutePath":"../../node_modules/@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","nameLocation":"-1:-1:-1","scope":1186,"sourceUnit":764,"symbolAliases":[{"foreign":{"id":1114,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"157:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1185,"nodeType":"ContractDefinition","src":"521:3235:13","nodes":[{"id":1126,"nodeType":"FunctionDefinition","src":"1222:460:13","nodes":[],"body":{"id":1125,"nodeType":"Block","src":"1314:368:13","nodes":[],"statements":[{"AST":{"nativeSrc":"1376:300:13","nodeType":"YulBlock","src":"1376:300:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:13","nodeType":"YulLiteral","src":"1397:4:13","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:13","nodeType":"YulLiteral","src":"1403:34:13","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:13","nodeType":"YulIdentifier","src":"1390:6:13"},"nativeSrc":"1390:48:13","nodeType":"YulFunctionCall","src":"1390:48:13"},"nativeSrc":"1390:48:13","nodeType":"YulExpressionStatement","src":"1390:48:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:13","nodeType":"YulLiteral","src":"1499:4:13","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:13","nodeType":"YulIdentifier","src":"1505:11:13"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:13","nodeType":"YulIdentifier","src":"1492:6:13"},"nativeSrc":"1492:25:13","nodeType":"YulFunctionCall","src":"1492:25:13"},"nativeSrc":"1492:25:13","nodeType":"YulExpressionStatement","src":"1492:25:13"},{"nativeSrc":"1571:31:13","nodeType":"YulAssignment","src":"1571:31:13","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:13","nodeType":"YulLiteral","src":"1591:4:13","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:13","nodeType":"YulLiteral","src":"1597:4:13","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:13","nodeType":"YulIdentifier","src":"1581:9:13"},"nativeSrc":"1581:21:13","nodeType":"YulFunctionCall","src":"1581:21:13"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:13","nodeType":"YulIdentifier","src":"1571:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1122,"isOffset":false,"isSlot":false,"src":"1571:6:13","valueSize":1},{"declaration":1119,"isOffset":false,"isSlot":false,"src":"1505:11:13","valueSize":1}],"id":1124,"nodeType":"InlineAssembly","src":"1367:309:13"}]},"documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"552:665:13","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:13","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:13","nodeType":"VariableDeclaration","scope":1126,"src":"1254:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:13"},"returnParameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"digest","nameLocation":"1306:6:13","nodeType":"VariableDeclaration","scope":1126,"src":"1298:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:13"},"scope":1185,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1152,"nodeType":"FunctionDefinition","src":"2148:229:13","nodes":[],"body":{"id":1151,"nodeType":"Block","src":"2234:143:13","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":1143,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"2343:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:13","memberName":"length","nodeType":"MemberAccess","src":"2343:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1141,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"2326:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$763_$","typeString":"type(library Strings)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:13","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":576,"src":"2326:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1139,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:13","typeDescriptions":{}}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1147,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"2361:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1135,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:13","typeDescriptions":{}}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:13","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:13","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1134,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1133,"id":1150,"nodeType":"Return","src":"2244:126:13"}]},"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"1688:455:13","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:13","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"message","nameLocation":"2193:7:13","nodeType":"VariableDeclaration","scope":1152,"src":"2180:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1128,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:13"},"returnParameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1152,"src":"2225:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:13"},"scope":1185,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1172,"nodeType":"FunctionDefinition","src":"2720:191:13","nodes":[],"body":{"id":1171,"nodeType":"Block","src":"2831:80:13","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":1166,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"2887:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1167,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"2898:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1163,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1162,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1161,"id":1170,"nodeType":"Return","src":"2841:63:13"}]},"documentation":{"id":1153,"nodeType":"StructuredDocumentation","src":"2383:332:13","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:13","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"validator","nameLocation":"2769:9:13","nodeType":"VariableDeclaration","scope":1172,"src":"2761:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"data","nameLocation":"2793:4:13","nodeType":"VariableDeclaration","scope":1172,"src":"2780:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1156,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:13"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1172,"src":"2822:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:13"},"scope":1185,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1184,"nodeType":"FunctionDefinition","src":"3353:401:13","nodes":[],"body":{"id":1183,"nodeType":"Block","src":"3462:292:13","nodes":[],"statements":[{"AST":{"nativeSrc":"3524:224:13","nodeType":"YulBlock","src":"3524:224:13","statements":[{"nativeSrc":"3538:22:13","nodeType":"YulVariableDeclaration","src":"3538:22:13","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:13","nodeType":"YulLiteral","src":"3555:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:13","nodeType":"YulIdentifier","src":"3549:5:13"},"nativeSrc":"3549:11:13","nodeType":"YulFunctionCall","src":"3549:11:13"},"variables":[{"name":"ptr","nativeSrc":"3542:3:13","nodeType":"YulTypedName","src":"3542:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:13","nodeType":"YulIdentifier","src":"3580:3:13"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:13","nodeType":"YulLiteral","src":"3585:10:13","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:13","nodeType":"YulIdentifier","src":"3573:6:13"},"nativeSrc":"3573:23:13","nodeType":"YulFunctionCall","src":"3573:23:13"},"nativeSrc":"3573:23:13","nodeType":"YulExpressionStatement","src":"3573:23:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:13","nodeType":"YulIdentifier","src":"3620:3:13"},{"kind":"number","nativeSrc":"3625:4:13","nodeType":"YulLiteral","src":"3625:4:13","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:13","nodeType":"YulIdentifier","src":"3616:3:13"},"nativeSrc":"3616:14:13","nodeType":"YulFunctionCall","src":"3616:14:13"},{"name":"domainSeparator","nativeSrc":"3632:15:13","nodeType":"YulIdentifier","src":"3632:15:13"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:13","nodeType":"YulIdentifier","src":"3609:6:13"},"nativeSrc":"3609:39:13","nodeType":"YulFunctionCall","src":"3609:39:13"},"nativeSrc":"3609:39:13","nodeType":"YulExpressionStatement","src":"3609:39:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:13","nodeType":"YulIdentifier","src":"3672:3:13"},{"kind":"number","nativeSrc":"3677:4:13","nodeType":"YulLiteral","src":"3677:4:13","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:13","nodeType":"YulIdentifier","src":"3668:3:13"},"nativeSrc":"3668:14:13","nodeType":"YulFunctionCall","src":"3668:14:13"},{"name":"structHash","nativeSrc":"3684:10:13","nodeType":"YulIdentifier","src":"3684:10:13"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:13","nodeType":"YulIdentifier","src":"3661:6:13"},"nativeSrc":"3661:34:13","nodeType":"YulFunctionCall","src":"3661:34:13"},"nativeSrc":"3661:34:13","nodeType":"YulExpressionStatement","src":"3661:34:13"},{"nativeSrc":"3708:30:13","nodeType":"YulAssignment","src":"3708:30:13","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:13","nodeType":"YulIdentifier","src":"3728:3:13"},{"kind":"number","nativeSrc":"3733:4:13","nodeType":"YulLiteral","src":"3733:4:13","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:13","nodeType":"YulIdentifier","src":"3718:9:13"},"nativeSrc":"3718:20:13","nodeType":"YulFunctionCall","src":"3718:20:13"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:13","nodeType":"YulIdentifier","src":"3708:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1180,"isOffset":false,"isSlot":false,"src":"3708:6:13","valueSize":1},{"declaration":1175,"isOffset":false,"isSlot":false,"src":"3632:15:13","valueSize":1},{"declaration":1177,"isOffset":false,"isSlot":false,"src":"3684:10:13","valueSize":1}],"id":1182,"nodeType":"InlineAssembly","src":"3515:233:13"}]},"documentation":{"id":1173,"nodeType":"StructuredDocumentation","src":"2917:431:13","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:13","parameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:13","nodeType":"VariableDeclaration","scope":1184,"src":"3378:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:13","nodeType":"VariableDeclaration","scope":1184,"src":"3403:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:13"},"returnParameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"digest","nameLocation":"3454:6:13","nodeType":"VariableDeclaration","scope":1184,"src":"3446:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:13"},"scope":1185,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"190:330:13","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"linearizedBaseContracts":[1185],"name":"MessageHashUtils","nameLocation":"529:16:13","scope":1186,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":13}